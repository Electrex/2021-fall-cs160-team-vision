{
	"info": {
		"_postman_id": "3d2a7b52-ac62-4c2b-addd-03c5fe2abcc8",
		"name": "Test Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register api/users (Register user incorrect password) FAIL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('register user with invalid password requirements should FAIL', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test('Registeration should return an error message', function () {\r",
							"    const {errors} = pm.response.json();\r",
							"    return errors[1] == \"Please enter a password with 6 or more characters\";\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let date = Date.now();\r",
							"pm.environment.set('currdate', date);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test User {{num}}\",\r\n    \"email\": \"testuser{{num}}@gmail.com\",\r\n    \"password\": \"\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register api/users (Register user incorrect password) FAIL Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('register user with invalid password requirements should FAIL', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test('Registeration should return an error message', function () {\r",
							"    const {errors} = pm.response.json();\r",
							"    return errors[1] == \"Please enter a password with 6 or more characters\";\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let date = Date.now();\r",
							"pm.environment.set('currdate', date);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test User {{num}}\",\r\n    \"email\": \"testuser{{num}}@gmail.com\",\r\n    \"password\": \"12345\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register api/users PASS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Registeration should PASS', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Registeration should return a token', function () {\r",
							"    const {token} = pm.response.json();\r",
							"    pm.environment.set('x-auth-token', token);\r",
							"    return token != undefined;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test User {{num}}\",\r\n    \"email\": \"testuser{{num}}@gmail.com\",\r\n    \"password\": \"123456\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create api/profile PASS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Profile creation for current user should PASS', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-auth-token",
						"value": "{{x-auth-token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"company\": \"Amazon\",\r\n    \"status\": \"Software Engineer\",\r\n    \"bio\": \"I like code\",\r\n    \"website\": \"https://www.mysite.com\",\r\n    \"skills\": \"HTML, CSS, PHP,Python\",\r\n    \"location\": \"Boston, MA\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/profile",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"profile"
					],
					"query": [
						{
							"key": "x-auth-token",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST api/auth (Login user) FAIL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('authorization check should FAIL', function () {\r",
							"    pm.response.to.have.status(401);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test User {{num}}\",\r\n    \"email\": \"testuser{{num}}@gmail.com\",\r\n    \"password\": \"1234565\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/auth",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST api/auth (Login user) PASS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('authorization check should PASS', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Login should return a token', function () {\r",
							"    const {token} = pm.response.json();\r",
							"    return token != undefined;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Test User {{num}}\",\r\n    \"email\": \"testuser{{num}}@gmail.com\",\r\n    \"password\": \"123456\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/auth",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET api/users/myID (PASS)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Registeration should PASS', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Registeration should return the user ID', function () {\r",
							"    const {id} = pm.response.json();\r",
							"    pm.environment.set('user_id', id);\r",
							"    return id != undefined;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "x-auth-token",
						"value": "{{x-auth-token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:6969/api/users/myID",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"users",
						"myID"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Review FAIL (Unauthorized)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('authorization check should FAIL', function () {\r",
							"    pm.response.to.have.status(401);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "x-auth-token",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Logitech g pro x superlight mouse\",\r\n    \"description\": \"Lightweight responsive gaming mouse tailored to win\",\r\n    \"link\": \"https://www.logitechg.com/en-us/products/gaming-mice/pro-x-superlight-wireless-mouse.910-005878.html\",\r\n    \"imageURL\": \"https://resource.logitechg.com/w_1200,c_limit,q_auto,f_auto,dpr_auto/d_transparent.gif/content/dam/gaming/en/products/pro-x-superlight/pro-x-superlight-black-hero.png\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/review",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"review"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Review FAIL (Invalid input)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('authorization check should FAIL', function () {\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "x-auth-token",
						"value": "{{x-auth-token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"\",\r\n    \"description\": \"Lightweight responsive gaming mouse tailored to win\",\r\n    \"link\": \"https://www.logitechg.com/en-us/products/gaming-mice/pro-x-superlight-wireless-mouse.910-005878.html\",\r\n    \"imageURL\": \"https://resource.logitechg.com/w_1200,c_limit,q_auto,f_auto,dpr_auto/d_transparent.gif/content/dam/gaming/en/products/pro-x-superlight/pro-x-superlight-black-hero.png\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/review",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"review"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Review PASS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('authorization check should PASS', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Successful review creation should return the review object in confirmation', function () {\r",
							"    const {review} = pm.response.json();\r",
							"    pm.environment.set('num', pm.environment.get('num') + 1);\r",
							"    return review != undefined;\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "x-auth-token",
						"value": "{{x-auth-token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Logitech g pro x superlight mouse\",\r\n    \"description\": \"Lightweight responsive gaming mouse tailored to win\",\r\n    \"link\": \"https://www.logitechg.com/en-us/products/gaming-mice/pro-x-superlight-wireless-mouse.910-005878.html\",\r\n    \"imageURL\": \"https://resource.logitechg.com/w_1200,c_limit,q_auto,f_auto,dpr_auto/d_transparent.gif/content/dam/gaming/en/products/pro-x-superlight/pro-x-superlight-black-hero.png\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:6969/api/review",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"api",
						"review"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}